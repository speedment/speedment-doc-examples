package com.speedment.datamodel.generated;

import com.speedment.common.injector.Injector;
import com.speedment.datamodel.HaresApplication;
import com.speedment.datamodel.HaresApplicationBuilder;
import com.speedment.datamodel.HaresApplicationImpl;
import com.speedment.datamodel.db0.hares.carrot.CarrotManagerImpl;
import com.speedment.datamodel.db0.hares.carrot.CarrotSqlAdapter;
import com.speedment.datamodel.db0.hares.friend.FriendManagerImpl;
import com.speedment.datamodel.db0.hares.friend.FriendSqlAdapter;
import com.speedment.datamodel.db0.hares.hare.HareManagerImpl;
import com.speedment.datamodel.db0.hares.hare.HareSqlAdapter;
import com.speedment.datamodel.db0.hares.human.HumanManagerImpl;
import com.speedment.datamodel.db0.hares.human.HumanSqlAdapter;
import com.speedment.runtime.core.annotation.GeneratedCode;
import com.speedment.runtime.core.internal.AbstractApplicationBuilder;

/**
 * A generated base {@link
 * com.speedment.runtime.core.internal.AbstractApplicationBuilder} class for the
 * {@link com.speedment.runtime.config.Project} named hares.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedHaresApplicationBuilder extends AbstractApplicationBuilder<HaresApplication, HaresApplicationBuilder> {
    
    protected GeneratedHaresApplicationBuilder() {
        super(HaresApplicationImpl.class, GeneratedHaresMetadata.class);
        withManager(CarrotManagerImpl.class);
        withManager(FriendManagerImpl.class);
        withManager(HareManagerImpl.class);
        withManager(HumanManagerImpl.class);
        withComponent(CarrotSqlAdapter.class);
        withComponent(FriendSqlAdapter.class);
        withComponent(HareSqlAdapter.class);
        withComponent(HumanSqlAdapter.class);
    }
    
    @Override
    public HaresApplication build(Injector injector) {
        return injector.getOrThrow(HaresApplication.class);
    }
}