package com.speedment.datamodel.db0.hares.friend.generated;

import com.speedment.datamodel.db0.hares.friend.Friend;
import com.speedment.datamodel.db0.hares.hare.Hare;
import com.speedment.datamodel.db0.hares.human.Human;
import com.speedment.runtime.core.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.speedment.datamodel.db0.hares.friend.Friend}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedFriendImpl implements Friend {
    
    private int hare;
    private int human;
    
    protected GeneratedFriendImpl() {
        
    }
    
    @Override
    public int getHare() {
        return hare;
    }
    
    @Override
    public int getHuman() {
        return human;
    }
    
    @Override
    public Friend setHare(int hare) {
        this.hare = hare;
        return this;
    }
    
    @Override
    public Friend setHuman(int human) {
        this.human = human;
        return this;
    }
    
    @Override
    public Hare findHare(Manager<Hare> foreignManager) {
        return foreignManager.stream().filter(Hare.ID.equal(getHare())).findAny().orElse(null);
    }
    
    @Override
    public Human findHuman(Manager<Human> foreignManager) {
        return foreignManager.stream().filter(Human.ID.equal(getHuman())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("hare = "  + Objects.toString(getHare()));
        sj.add("human = " + Objects.toString(getHuman()));
        return "FriendImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Friend)) { return false; }
        final Friend thatFriend = (Friend)that;
        if (this.getHare() != thatFriend.getHare()) {return false; }
        if (this.getHuman() != thatFriend.getHuman()) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getHare());
        hash = 31 * hash + Integer.hashCode(getHuman());
        return hash;
    }
}