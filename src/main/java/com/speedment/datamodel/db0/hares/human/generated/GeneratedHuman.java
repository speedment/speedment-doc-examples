package com.speedment.datamodel.db0.hares.human.generated;

import com.speedment.datamodel.db0.hares.human.Human;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.annotation.GeneratedCode;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.speedment.datamodel.db0.hares.human.Human}-interface representing
 * entities of the {@code human}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedHuman {
    
    /**
     * This Field corresponds to the {@link Human} field that can be obtained
     * using the {@link Human#getId()} method.
     */
    final IntField<Human, Integer> ID = IntField.create(
        Identifier.ID,
        Human::getId,
        Human::setId,
        TypeMapper.primitive(), 
        true
    );
    /**
     * This Field corresponds to the {@link Human} field that can be obtained
     * using the {@link Human#getName()} method.
     */
    final StringField<Human, String> NAME = StringField.create(
        Identifier.NAME,
        Human::getName,
        Human::setName,
        TypeMapper.identity(), 
        false
    );
    
    /**
     * Returns the id of this Human. The id field corresponds to the database
     * column db0.hares.human.id.
     * 
     * @return the id of this Human
     */
    int getId();
    
    /**
     * Returns the name of this Human. The name field corresponds to the
     * database column db0.hares.human.name.
     * 
     * @return the name of this Human
     */
    String getName();
    
    /**
     * Sets the id of this Human. The id field corresponds to the database
     * column db0.hares.human.id.
     * 
     * @param id to set of this Human
     * @return   this Human instance
     */
    Human setId(int id);
    
    /**
     * Sets the name of this Human. The name field corresponds to the database
     * column db0.hares.human.name.
     * 
     * @param name to set of this Human
     * @return     this Human instance
     */
    Human setName(String name);
    
    enum Identifier implements ColumnIdentifier<Human> {
        
        ID   ("id"),
        NAME ("name");
        
        private final String columnName;
        private final TableIdentifier<Human> tableIdentifier;
        
        Identifier(String columnName) {
            this.columnName      = columnName;
            this.tableIdentifier = TableIdentifier.of(    getDbmsName(), 
                getSchemaName(), 
                getTableName());
        }
        
        @Override
        public String getDbmsName() {
            return "db0";
        }
        
        @Override
        public String getSchemaName() {
            return "hares";
        }
        
        @Override
        public String getTableName() {
            return "human";
        }
        
        @Override
        public String getColumnName() {
            return this.columnName;
        }
        
        @Override
        public TableIdentifier<Human> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}