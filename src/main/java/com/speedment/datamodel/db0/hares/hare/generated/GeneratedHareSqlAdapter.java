package com.speedment.datamodel.db0.hares.hare.generated;

import com.speedment.common.injector.annotation.ExecuteBefore;
import com.speedment.common.injector.annotation.WithState;
import com.speedment.datamodel.db0.hares.hare.Hare;
import com.speedment.datamodel.db0.hares.hare.HareImpl;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.annotation.GeneratedCode;
import com.speedment.runtime.core.component.sql.SqlPersistenceComponent;
import com.speedment.runtime.core.component.sql.SqlStreamSupplierComponent;
import com.speedment.runtime.core.exception.SpeedmentException;
import java.sql.ResultSet;
import java.sql.SQLException;
import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.speedment.datamodel.db0.hares.hare.Hare} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedHareSqlAdapter {
    
    private final TableIdentifier<Hare> tableIdentifier;
    
    protected GeneratedHareSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("db0", "hares", "hare");
    }
    
    @ExecuteBefore(RESOLVED)
    void installMethodName(@WithState(RESOLVED) SqlStreamSupplierComponent streamSupplierComponent, @WithState(RESOLVED) SqlPersistenceComponent persistenceComponent) {
        streamSupplierComponent.install(tableIdentifier, this::apply);
        persistenceComponent.install(tableIdentifier);
    }
    
    protected Hare apply(ResultSet resultSet) throws SpeedmentException {
        final Hare entity = createEntity();
        try {
            entity.setId(    resultSet.getInt(1)    );
            entity.setName(  resultSet.getString(2) );
            entity.setColor( resultSet.getString(3) );
            entity.setAge(   resultSet.getInt(4)    );
        } catch (final SQLException sqle) {
            throw new SpeedmentException(sqle);
        }
        return entity;
    }
    
    protected HareImpl createEntity() {
        return new HareImpl();
    }
}